{"version":3,"file":"hss.js","sources":["../src/modules/settings.js","../src/modules/grid.js","../src/hss.js","../src/modules/border.js","../src/modules/hitarea.js","../src/modules/token-config.js"],"sourcesContent":["export function registerSettings() {\n\tconst canvasRedraw = () => {\n\t\tif (canvas.ready) canvas.draw();\n\t};\n\n\tgame.settings.register(\"hex-size-support\", \"alwaysShowBorder\", {\n\t\tname: \"hex-size-support.settings.alwaysShowBorder.name\",\n\t\thint: \"hex-size-support.settings.alwaysShowBorder.hint\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: false,\n\t\tonChange: canvasRedraw,\n\t});\n\n\tgame.settings.register(\"hex-size-support\", \"altOrientationDefault\", {\n\t\tname: \"hex-size-support.settings.altOrientationDefault.name\",\n\t\thint: \"hex-size-support.settings.altOrientationDefault.hint\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: false,\n\t\tonChange: canvasRedraw,\n\t});\n\n\tgame.settings.register(\"hex-size-support\", \"borderWidth\", {\n\t\tname: \"hex-size-support.settings.borderWidth.name\",\n\t\thint: \"hex-size-support.settings.borderWidth.hint\",\n\t\tscope: \"world\",\n\t\ttype: Number,\n\t\tconfig: true,\n\t\tdefault: 2,\n\t\trange: {\n\t\t\tmin: 1,\n\t\t\tmax: 20,\n\t\t\tstep: 1,\n\t\t},\n\t\tonChange: val => {\n\t\t\tCONFIG.Canvas.objectBorderThickness = val;\n\t\t\tcanvasRedraw();\n\t\t},\n\t});\n\tCONFIG.Canvas.objectBorderThickness = game.settings.get(\"hex-size-support\", \"borderWidth\");\n\n\tgame.settings.register(\"hex-size-support\", \"borderBehindToken\", {\n\t\tname: \"hex-size-support.settings.borderBehindToken.name\",\n\t\thint: \"hex-size-support.settings.borderBehindToken.hint\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: true,\n\t\tonChange: canvasRedraw,\n\t});\n\n\tgame.settings.register(\"hex-size-support\", \"fillBorder\", {\n\t\tname: \"hex-size-support.settings.fillBorder.name\",\n\t\thint: \"hex-size-support.settings.fillBorder.hint\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: false,\n\t\tonChange: canvasRedraw,\n\t});\n\n\t/**\n\t * Border Color Settings\n\t */\n\n\tgame.settings.register(\"hex-size-support\", \"controlledColor\", {\n\t\tname: \"hex-size-support.settings.controlledColor.name\",\n\t\tscope: \"client\",\n\t\ttype: String,\n\t\tdefault: \"#FF9829\",\n\t\tconfig: true,\n\t\tonChange: val => {\n\t\t\tCONFIG.Canvas.dispositionColors.CONTROLLED = parseInt(val.substr(1), 16);\n\t\t\tcanvasRedraw();\n\t\t},\n\t});\n\tCONFIG.Canvas.dispositionColors.CONTROLLED = parseInt(\n\t\tgame.settings.get(\"hex-size-support\", \"controlledColor\").substr(1),\n\t\t16\n\t);\n\n\tgame.settings.register(\"hex-size-support\", \"partyColor\", {\n\t\tname: \"hex-size-support.settings.partyColor.name\",\n\t\tscope: \"client\",\n\t\ttype: String,\n\t\tdefault: \"#0A7AB2\",\n\t\tconfig: true,\n\t\tonChange: val => {\n\t\t\tCONFIG.Canvas.dispositionColors.PARTY = parseInt(val.substr(1), 16);\n\t\t\tcanvasRedraw();\n\t\t},\n\t});\n\tCONFIG.Canvas.dispositionColors.PARTY = parseInt(\n\t\tgame.settings.get(\"hex-size-support\", \"partyColor\").substr(1),\n\t\t16\n\t);\n\n\tgame.settings.register(\"hex-size-support\", \"friendlyColor\", {\n\t\tname: \"hex-size-support.settings.friendlyColor.name\",\n\t\tscope: \"client\",\n\t\ttype: String,\n\t\tdefault: \"#0A7AB2\",\n\t\tconfig: true,\n\t\tonChange: val => {\n\t\t\tCONFIG.Canvas.dispositionColors.FRIENDLY = parseInt(val.substr(1), 16);\n\t\t\tcanvasRedraw();\n\t\t},\n\t});\n\tCONFIG.Canvas.dispositionColors.FRIENDLY = parseInt(\n\t\tgame.settings.get(\"hex-size-support\", \"friendlyColor\").substr(1),\n\t\t16\n\t);\n\n\tgame.settings.register(\"hex-size-support\", \"neutralColor\", {\n\t\tname: \"hex-size-support.settings.neutralColor.name\",\n\t\tscope: \"client\",\n\t\ttype: String,\n\t\tdefault: \"#F1D836\",\n\t\tconfig: true,\n\t\tonChange: val => {\n\t\t\tCONFIG.Canvas.dispositionColors.NEUTRAL = parseInt(val.substr(1), 16);\n\t\t\tcanvasRedraw();\n\t\t},\n\t});\n\tCONFIG.Canvas.dispositionColors.NEUTRAL = parseInt(\n\t\tgame.settings.get(\"hex-size-support\", \"neutralColor\").substr(1),\n\t\t16\n\t);\n\n\tgame.settings.register(\"hex-size-support\", \"hostileColor\", {\n\t\tname: \"hex-size-support.settings.hostileColor.name\",\n\t\tscope: \"client\",\n\t\ttype: String,\n\t\tdefault: \"#E72124\",\n\t\tconfig: true,\n\t\tonChange: val => {\n\t\t\tCONFIG.Canvas.dispositionColors.HOSTILE = parseInt(val.substr(1), 16);\n\t\t\tcanvasRedraw();\n\t\t},\n\t});\n\tCONFIG.Canvas.dispositionColors.HOSTILE = parseInt(\n\t\tgame.settings.get(\"hex-size-support\", \"hostileColor\").substr(1),\n\t\t16\n\t);\n\n\t// Register flipping to keybinds for those that want it.\n\tgame.keybindings.register(\"hex-size-support\", \"swapOrientation\", {\n\t\tname: \"hex-size-support.keybinds.swapOrientation.name\",\n\t\thint: \"hex-size-support.keybinds.swapOrientation.hint\",\n\t\tonDown: flipControlledTokens,\n\t\teditable: [], //[{ key: \"KeyR\", modifiers: [\"Shift\"] }],\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\n\t});\n}\n\n/**\n * @param {SettingsConfig} _app\n * @param {JQuery<HTMLElement>} el\n */\nexport function renderSettingsConfig(_app, el) {\n\tlet nC = game.settings.get(\"hex-size-support\", \"neutralColor\");\n\tlet fC = game.settings.get(\"hex-size-support\", \"friendlyColor\");\n\tlet hC = game.settings.get(\"hex-size-support\", \"hostileColor\");\n\tlet pC = game.settings.get(\"hex-size-support\", \"partyColor\");\n\tlet cC = game.settings.get(\"hex-size-support\", \"controlledColor\");\n\n\tel.find('[name=\"hex-size-support.controlledColor\"]')\n\t\t.parent()\n\t\t.append(`<input type=\"color\"value=\"${cC}\" data-edit=\"hex-size-support.controlledColor\">`);\n\tel.find('[name=\"hex-size-support.partyColor\"]')\n\t\t.parent()\n\t\t.append(`<input type=\"color\" value=\"${pC}\" data-edit=\"hex-size-support.partyColor\">`);\n\tel.find('[name=\"hex-size-support.friendlyColor\"]')\n\t\t.parent()\n\t\t.append(`<input type=\"color\" value=\"${fC}\" data-edit=\"hex-size-support.friendlyColor\">`);\n\tel.find('[name=\"hex-size-support.neutralColor\"]')\n\t\t.parent()\n\t\t.append(`<input type=\"color\" value=\"${nC}\" data-edit=\"hex-size-support.neutralColor\">`);\n\tel.find('[name=\"hex-size-support.hostileColor\"]')\n\t\t.parent()\n\t\t.append(`<input type=\"color\" value=\"${hC}\" data-edit=\"hex-size-support.hostileColor\">`);\n}\n\n/**\n * Toggle the orientation flag on all controlled tokens\n */\nfunction flipControlledTokens() {\n\tconst updates = canvas.tokens?.controlled.map(t => {\n\t\treturn {\n\t\t\t_id: t.document.id,\n\t\t\t\"flags.hex-size-support.alternateOrientation\": !t.document.getFlag(\n\t\t\t\t\"hex-size-support\",\n\t\t\t\t\"alternateOrientation\"\n\t\t\t),\n\t\t};\n\t});\n\tcanvas.scene?.updateEmbeddedDocuments(\"Token\", updates);\n}\n\n/**\nMy sincerest affection and love for the Pilot NET Discord community. Without your support, patience and good feels I wouldn't have \never gotten this far. This is all for you now, I'm sorry I made you all wait for so long.\n - Ember Scaleborne <3\n\nIn regards to the 0.8.6 foundry update,\n    My deepest thanks for the efforts of @FolkvangrForgent, @Eranziel, @The-E and @Bolts. Without your hard work and nagging, this update would\nhave been a lot later than it had any right to be be. Life seems to really enjoy kicking me right when a new update comes out >.>\n - Ember Scaleborne 06/26/2021 <3\n\nBig huge thanks to Ember Scaleborne (@Ourobor). I would not have been\nable to make this update if you hadn't made this module in the first\nplace. I hope you are doing well <3\n - Bolts, 09/18/2022\n*/\n","export function registerGridWrapper() {\n\tlibWrapper.register(\n\t\t\"hex-size-support\",\n\t\t\"BaseGrid.implementationFor\",\n\t\t/** @param {number} grid_type */\n\t\tfunction (wrapped, grid_type) {\n\t\t\tconst types = CONST.GRID_TYPES;\n\t\t\tif ([types.HEXEVENR, types.HEXODDR, types.HEXEVENQ, types.HEXODDQ].includes(grid_type))\n\t\t\t\treturn HSSHexagonalGrid;\n\t\t\treturn wrapped(grid_type);\n\t\t},\n\t\t\"MIXED\"\n\t);\n}\n\n/**\n * Borders are defined by an array of point arrays. All of the points in the\n * array are normalized to the size of the bounding box around the token, so\n * 0,0 is the top left corner, and 1,1 is the bottom right. The points are\n * automatically scaled and shifted as necessary by foundry.\n */\nconst BORDER_EXTENSIONS = {\n\tPOINTY: {\n\t\t5: [\n\t\t\t[0, 7 / 16],\n\t\t\t[1 / 10, 6 / 16],\n\t\t\t[1 / 10, 4 / 16],\n\t\t\t[2 / 10, 3 / 16],\n\t\t\t[2 / 10, 1 / 16],\n\t\t\t[3 / 10, 0],\n\t\t\t[4 / 10, 1 / 16],\n\t\t\t[5 / 10, 0],\n\t\t\t[6 / 10, 1 / 16],\n\t\t\t[7 / 10, 0],\n\t\t\t[8 / 10, 1 / 16],\n\t\t\t[8 / 10, 3 / 16],\n\t\t\t[9 / 10, 4 / 16],\n\t\t\t[9 / 10, 6 / 16],\n\t\t\t[1, 7 / 16],\n\t\t\t[1, 9 / 16],\n\t\t\t[9 / 10, 10 / 16],\n\t\t\t[9 / 10, 12 / 16],\n\t\t\t[8 / 10, 13 / 16],\n\t\t\t[8 / 10, 15 / 16],\n\t\t\t[7 / 10, 1],\n\t\t\t[6 / 10, 15 / 16],\n\t\t\t[5 / 10, 1],\n\t\t\t[4 / 10, 15 / 16],\n\t\t\t[3 / 10, 1],\n\t\t\t[2 / 10, 15 / 16],\n\t\t\t[2 / 10, 13 / 16],\n\t\t\t[1 / 10, 12 / 16],\n\t\t\t[1 / 10, 10 / 16],\n\t\t\t[0, 9 / 16],\n\t\t],\n\t},\n\tFLAT: {\n\t\t5: [\n\t\t\t[7 / 16, 0],\n\t\t\t[6 / 16, 1 / 10],\n\t\t\t[4 / 16, 1 / 10],\n\t\t\t[3 / 16, 2 / 10],\n\t\t\t[1 / 16, 2 / 10],\n\t\t\t[0, 3 / 10],\n\t\t\t[1 / 16, 4 / 10],\n\t\t\t[0, 5 / 10],\n\t\t\t[1 / 16, 6 / 10],\n\t\t\t[0, 7 / 10],\n\t\t\t[1 / 16, 8 / 10],\n\t\t\t[3 / 16, 8 / 10],\n\t\t\t[4 / 16, 9 / 10],\n\t\t\t[6 / 16, 9 / 10],\n\t\t\t[7 / 16, 1],\n\t\t\t[9 / 16, 1],\n\t\t\t[10 / 16, 9 / 10],\n\t\t\t[12 / 16, 9 / 10],\n\t\t\t[13 / 16, 8 / 10],\n\t\t\t[15 / 16, 8 / 10],\n\t\t\t[1, 7 / 10],\n\t\t\t[15 / 16, 6 / 10],\n\t\t\t[1, 5 / 10],\n\t\t\t[15 / 16, 4 / 10],\n\t\t\t[1, 3 / 10],\n\t\t\t[15 / 16, 2 / 10],\n\t\t\t[13 / 16, 2 / 10],\n\t\t\t[12 / 16, 1 / 10],\n\t\t\t[10 / 16, 1 / 10],\n\t\t\t[9 / 16, 0],\n\t\t],\n\t},\n};\n\n/**\n * Fixes orientation of size 2 and extends the hex borders with additional sizes\n */\nexport function extendHexBorders() {\n\tconst pointy_borders = foundry.utils.deepClone(HexagonalGrid.POINTY_HEX_BORDERS);\n\tconst flat_borders = foundry.utils.deepClone(HexagonalGrid.FLAT_HEX_BORDERS);\n\n\t// Flip the size 2 polygons\n\tpointy_borders[2] = pointy_borders[2].map(p => [p[0], 1 - p[1]]);\n\tflat_borders[2] = flat_borders[2].map(p => [1 - p[0], p[1]]);\n\n\t// Add any extra polygons\n\tHexagonalGrid.POINTY_HEX_BORDERS = {\n\t\t...pointy_borders,\n\t\t...BORDER_EXTENSIONS.POINTY,\n\t};\n\tHexagonalGrid.FLAT_HEX_BORDERS = {\n\t\t...flat_borders,\n\t\t...BORDER_EXTENSIONS.FLAT,\n\t};\n}\n\n/**\n * Determine whether the token should use the alternate orientation\n * @param {Token} token\n */\nexport function isAltOrientation(token) {\n\treturn !!(\n\t\tgame.settings.get(\"hex-size-support\", \"altOrientationDefault\") ^\n\t\t(token.document.getFlag(\"hex-size-support\", \"alternateOrientation\") ?? false)\n\t);\n}\n\n/**\n * Improve border support for hexagonal grids\n */\nclass HSSHexagonalGrid extends HexagonalGrid {\n\t/**\n\t * Get a border polygon based on the width and height of a given token for\n\t * the alternate orientation.\n\t * @param {number} w  The width of the token in hexes.\n\t * @param {number} h  The height of the token in hexes.\n\t * @param {number} p  The padding size in pixels.\n\t * @returns {number[]|null}\n\t */\n\tgetAltBorderPolygon(w, h, p) {\n\t\t// Flip the points if it's alternate orientation\n\t\t// this is the only real change from the foundry default\n\t\tconst points = (\n\t\t\tthis.columnar ? this.constructor.FLAT_HEX_BORDERS[w] : this.constructor.POINTY_HEX_BORDERS[w]\n\t\t)?.map(p => [1 - p[0], 1 - p[1]]);\n\n\t\tif (w !== h || !points) return null;\n\t\tconst p2 = p / 2;\n\t\tconst p4 = p / 4;\n\t\t({ width: w, height: h } = this.getRect(w, h));\n\t\treturn this.getPolygon(-p4, -p4, w + p2, h + p2, points);\n\t}\n\n\t/**\n\t * Implement special rules for snapping tokens of various sizes on a hex grid.\n\t * @param {number} x     The X co-ordinate of the hexagon's top-left bounding box.\n\t * @param {number} y     The Y co-ordinate of the hexagon's top-left bounding box.\n\t * @param {Token} token  The token.\n\t * @returns {[number, number]}\n\t * @protected\n\t */\n\t_adjustSnapForTokenSize(x, y, token) {\n\t\tif (token.document.height !== token.document.width)\n\t\t\treturn super._adjustSnapForTokenSize(x, y, token);\n\t\t// Are we using alternate orentation? 1 = yes, 0 = no\n\t\tconst alt_shape = isAltOrientation(token) ? 1 : 0;\n\t\t/** @type {number | undefined} */\n\t\tconst token_size =\n\t\t\ttoken.document.width === token.document.height ? token.document.width : undefined;\n\t\tif (token_size <= 1) return super._adjustSnapForTokenSize(x, y, token);\n\t\t// Set grid offset based on size and orientation\n\t\tconst shift_val = Math.floor((token_size + alt_shape - 1) / 2) % 2;\n\t\tif (this.columnar) y -= (shift_val * this.h) / 2;\n\t\telse x -= (shift_val * this.w) / 2;\n\t\treturn [x, y];\n\t}\n\n\t/**\n\t * Implement special rules for determining the grid position of tokens of various sizes on a hex grid.\n\t * @param {number} row          The row number.\n\t * @param {number} col          The column number.\n\t * @param {Token} token         The token.\n\t * @returns {[number, number]}  The adjusted row and column number.\n\t * @protected\n\t */\n\t_adjustPositionForTokenSize(row, col, token) {\n\t\tconst size = token.document.height === token.document.width ? token.document.width : undefined;\n\t\tif (size) {\n\t\t\tconst alt_shape = isAltOrientation(token) ? 1 : 0;\n\t\t\tconst offset = Math.floor((size + alt_shape - 1) / 2) % 2;\n\t\t\tif (this.columnar) row += offset;\n\t\t\tif (!this.columnar) col += offset;\n\t\t}\n\t\treturn [row, col];\n\t}\n\n\t/** @override\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} interval\n\t * @param {object} obj\n\t * @param {Token} obj.token\n\t */\n\tgetSnappedPosition(x, y, interval = 1, { token } = {}) {\n\t\t// Use the default behavior if we're not snapping a token\n\t\tif (!token) return super.getSnappedPosition(x, y, interval, { token });\n\n\t\t// Are we using alternate orentation? 1 = yes, 0 = no\n\t\tconst alt_shape = isAltOrientation(token) ? 1 : 0;\n\t\t/** @type {number | undefined} */\n\t\tconst token_size =\n\t\t\ttoken.document.width === token.document.height ? token.document.width : undefined;\n\t\tif (token_size === undefined || token_size <= 1)\n\t\t\treturn super.getSnappedPosition(x, y, interval, { token });\n\t\t// Set grid offset based on size and orientation\n\t\tconst shift_val = Math.floor((token_size + alt_shape - 1) / 2) % 2;\n\t\tif (this.columnar) y += (shift_val * this.h) / 2;\n\t\telse x += (shift_val * this.w) / 2;\n\t\tconst [r0, c0] = this._getGridPositionFromPixels(x, y, \"round\");\n\t\tlet [x0, y0] = this.getPixelsFromGridPosition(r0, c0);\n\t\t[x0, y0] = this._adjustSnapForTokenSize(x0, y0, token);\n\t\treturn { x: x0, y: y0 };\n\t}\n}\n","import { registerSettings, renderSettingsConfig } from \"./modules/settings\";\nimport { hitAreaDraw, hitAreaUpdate, pivotToken } from \"./modules/hitarea\";\nimport { registerBorderWrappers, moveBorderLayer } from \"./modules/border\";\nimport { registerGridWrapper, extendHexBorders } from \"./modules/grid\";\nimport { extendTokenConfig } from \"./modules/token-config\";\n\nHooks.once(\"init\", () => {\n\tconsole.log(\"hex-size-support | Initializing module\");\n\tregisterSettings();\n\textendHexBorders();\n});\n\nHooks.once(\"libWrapper.Ready\", () => {\n\tregisterBorderWrappers();\n\tregisterGridWrapper();\n});\n\nHooks.on(\"drawToken\", hitAreaDraw);\nHooks.on(\"updateToken\", hitAreaUpdate);\nHooks.on(\"refreshToken\", pivotToken);\nHooks.on(\"renderSettingsConfig\", renderSettingsConfig);\nHooks.on(\"canvasReady\", moveBorderLayer);\nHooks.on(\"renderTokenConfig\", extendTokenConfig);\n","import { isAltOrientation } from \"./grid\";\n\nexport function registerBorderWrappers() {\n\tlibWrapper.register(\n\t\t\"hex-size-support\",\n\t\t\"Token.prototype._refreshBorder\",\n\t\t/** @this Token */\n\t\tfunction () {\n\t\t\t/** @type boolean */\n\t\t\tconst always_show = game.settings.get(\"hex-size-support\", \"alwaysShowBorder\");\n\t\t\t/** @type boolean */\n\t\t\tconst fill_border = game.settings.get(\"hex-size-support\", \"fillBorder\");\n\t\t\tconst options = {};\n\t\t\tif (always_show) options.hover = true;\n\n\t\t\tthis.border.clear();\n\t\t\tif (!this.isVisible) return;\n\t\t\tconst borderColor = this._getBorderColor(options);\n\t\t\tif (borderColor == null) return;\n\n\t\t\tconst t = CONFIG.Canvas.objectBorderThickness;\n\t\t\tthis.border.position.set(this.document.x, this.document.y);\n\n\t\t\t// Draw Hex border for size 1 tokens on a hex grid\n\t\t\tif (canvas.grid.isHex) {\n\t\t\t\tconst polygon = isAltOrientation(this)\n\t\t\t\t\t? canvas.grid.grid.getAltBorderPolygon(this.document.width, this.document.height, t)\n\t\t\t\t\t: canvas.grid.grid.getBorderPolygon(this.document.width, this.document.height, t);\n\t\t\t\tif (polygon) {\n\t\t\t\t\tthis.border.lineStyle(t, 0x000000, 0.8).drawPolygon(polygon);\n\t\t\t\t\tthis.border.lineStyle(t / 2, borderColor, 1.0).drawPolygon(polygon);\n\t\t\t\t\tif (fill_border) this.border.beginFill(borderColor, 0.3).drawPolygon(polygon);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tcanvas.grid.type === CONST.GRID_TYPES.GRIDLESS &&\n\t\t\t\tthis.document.width === this.document.height\n\t\t\t) {\n\t\t\t\tthis.border.lineStyle(t, 0x000000, 0.8).drawCircle(this.w / 2, this.h / 2, this.w / 2);\n\t\t\t\tthis.border\n\t\t\t\t\t.lineStyle(t / 2, borderColor, 1.0)\n\t\t\t\t\t.drawCircle(this.w / 2, this.h / 2, this.w / 2);\n\t\t\t\tif (fill_border)\n\t\t\t\t\tthis.border.beginFill(borderColor, 0.3).drawCircle(this.w / 2, this.h / 2, this.w / 2);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, draw square border\n\t\t\tconst h = Math.round(t / 2);\n\t\t\tconst o = Math.round(h / 2);\n\t\t\tthis.border.lineStyle(t, 0x000000, 0.8).drawRoundedRect(-o, -o, this.w + h, this.h + h, 3);\n\t\t\tthis.border.lineStyle(h, borderColor, 1.0).drawRoundedRect(-o, -o, this.w + h, this.h + h, 3);\n\t\t\tif (fill_border) {\n\t\t\t\tthis.border.beginFill(borderColor, 0.3).drawRoundedRect(0, 0, this.w, this.h, 3);\n\t\t\t}\n\t\t},\n\t\t\"OVERRIDE\"\n\t);\n}\n\nexport function moveBorderLayer() {\n\t/** @type boolean */\n\tconst border_below = game.settings.get(\"hex-size-support\", \"borderBehindToken\");\n\tif (border_below) return;\n\tconst borders = canvas.grid.borders;\n\tcanvas.grid.removeChild(borders);\n\tcanvas.tokens.addChild(borders);\n}\n","import { isAltOrientation } from \"./grid\";\n\n/** @param {Token} token */\nexport function hitAreaDraw(token) {\n\tif (canvas?.grid.isHex) {\n\t\tconst point_array = isAltOrientation(token)\n\t\t\t? canvas.grid.grid.getAltBorderPolygon(token.document.width, token.document.height, 0)\n\t\t\t: canvas.grid.grid.getBorderPolygon(token.document.width, token.document.height, 0);\n\t\tif (point_array) token.hitArea = new PIXI.Polygon(point_array);\n\t} else if (\n\t\tcanvas.grid.type === CONST.GRID_TYPES.GRIDLESS &&\n\t\ttoken.document.width === token.document.height\n\t) {\n\t\ttoken.hitArea = new PIXI.Circle(token.w / 2, token.h / 2, token.w / 2);\n\t}\n}\n\n/** @param {TokenDocument} token */\nexport function hitAreaUpdate(token, data) {\n\tif (\n\t\t![\"width\", \"height\", \"texture.scaleX\", \"texture.scaleY\"].some(k => Object.hasOwn(data, k)) &&\n\t\tfoundry.utils.getProperty(data, \"flags.hex-size-support.alternateOrientation\") == null\n\t) {\n\t\treturn;\n\t}\n\tif (canvas?.grid.isHex) {\n\t\tconst point_array = isAltOrientation(token.object)\n\t\t\t? canvas.grid.grid.getAltBorderPolygon(token.width, token.height, 0)\n\t\t\t: canvas.grid.grid.getBorderPolygon(token.width, token.height, 0);\n\t\tif (point_array) token.object.hitArea = new PIXI.Polygon(point_array);\n\t} else if (canvas.grid.type === CONST.GRID_TYPES.GRIDLESS && token.width === token.height) {\n\t\ttoken.object.hitArea = new PIXI.Circle(\n\t\t\ttoken.object.w / 2,\n\t\t\ttoken.object.h / 2,\n\t\t\ttoken.object.w / 2\n\t\t);\n\t}\n}\n\n/** @param {Token} token */\nexport function pivotToken(token) {\n\t/** @type number | undefined */\n\tconst pivotx = token.document.getFlag(\"hex-size-support\", \"pivotx\");\n\t/** @type number | undefined */\n\tconst pivoty = token.document.getFlag(\"hex-size-support\", \"pivoty\");\n\ttoken.mesh.pivot.x = pivotx ?? 0;\n\ttoken.mesh.pivot.y = pivoty ?? 0;\n}\n","/**\n * @param {TokenConfig} app\n * @param {JQuery<HTMLElement>} $el\n * @param {object} data\n */\nexport function extendTokenConfig(app, $el) {\n\t$el.find(\"[name=width]\").closest(\".form-group\").after(`\n\t<div class=\"form-group slim\">\n\t\t<label>${game.i18n.localize(\"hex-size-support.tokenConfig.artpivot.label\")}</label>\n\t\t<div class=\"form-fields\">\n\t\t\t<label>X</label>\n\t\t\t<input type=\"number\" step=\"1\" name=\"flags.hex-size-support.pivotx\" placeholder=\"px\" \\\n\t\t\t\tvalue=\"${app.object.getFlag(\"hex-size-support\", \"pivotx\")}\">\n\t\t\t<label>Y</label>\n\t\t\t<input type=\"number\" step=\"1\" name=\"flags.hex-size-support.pivoty\" placeholder=\"px\" \\\n\t\t\t\tvalue=\"${app.object.getFlag(\"hex-size-support\", \"pivoty\")}\">\n\t\t</div>\n\t</div>\n\t`);\n\t$el.find(\"[name=mirrorX]\").closest(\".form-group\").after(`\n\t<div class=\"form-group slim\">\n\t\t<label>${game.i18n.localize(\"hex-size-support.tokenConfig.altOrientation.label\")}</label>\n\t\t<div class=\"form-fields\">\n\t\t\t<input type=\"checkbox\" step=\"1\" name=\"flags.hex-size-support.alternateOrientation\" ${\n\t\t\t\tapp.object.getFlag(\"hex-size-support\", \"alternateOrientation\") ? \"checked\" : \"\"\n\t\t\t}>\n\t\t</div>\n\t</div>\n\t`);\n\tapp.setPosition();\n}\n"],"names":["flipControlledTokens","updates","canvas","tokens","controlled","map","t","_id","document","id","getFlag","scene","updateEmbeddedDocuments","BORDER_EXTENSIONS","isAltOrientation","token","game","settings","get","HSSHexagonalGrid","HexagonalGrid","getAltBorderPolygon","w","h","p","points","this","columnar","constructor","FLAT_HEX_BORDERS","POINTY_HEX_BORDERS","p2","p4","width","height","getRect","getPolygon","_adjustSnapForTokenSize","x","y","super","alt_shape","token_size","undefined","shift_val","Math","floor","_adjustPositionForTokenSize","row","col","size","offset","getSnappedPosition","interval","r0","c0","_getGridPositionFromPixels","x0","y0","getPixelsFromGridPosition","Hooks","once","console","log","registerSettings","canvasRedraw","ready","draw","register","name","hint","scope","type","Boolean","config","default","onChange","Number","range","min","max","step","val","CONFIG","Canvas","objectBorderThickness","String","dispositionColors","CONTROLLED","parseInt","substr","PARTY","FRIENDLY","NEUTRAL","HOSTILE","keybindings","onDown","editable","precedence","CONST","KEYBINDING_PRECEDENCE","NORMAL","extendHexBorders","pointy_borders","foundry","utils","deepClone","flat_borders","registerBorderWrappers","libWrapper","always_show","fill_border","options","hover","border","clear","isVisible","borderColor","_getBorderColor","position","set","grid","isHex","polygon","getBorderPolygon","lineStyle","drawPolygon","beginFill","GRID_TYPES","GRIDLESS","drawCircle","round","o","drawRoundedRect","registerGridWrapper","wrapped","grid_type","types","HEXEVENR","HEXODDR","HEXEVENQ","HEXODDQ","includes","on","hitAreaDraw","point_array","hitArea","PIXI","Polygon","Circle","hitAreaUpdate","data","some","k","Object","hasOwn","getProperty","object","pivotToken","pivotx","pivoty","mesh","pivot","renderSettingsConfig","_app","el","nC","fC","hC","pC","cC","find","parent","append","moveBorderLayer","borders","removeChild","addChild","extendTokenConfig","app","$el","closest","after","i18n","localize","setPosition"],"mappings":"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"}